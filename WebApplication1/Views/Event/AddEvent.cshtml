@model WebApplication1.Models.Etkinlik
@{
    ViewData["Title"] = "Etkinlik Ekle";
    Layout = "~/Views/Shared/UserLayout.cshtml";
}

<head>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Bokor&family=Itim&family=Protest+Revolution&display=swap" rel="stylesheet">
    <!-- Bootstrap JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="stylesheet" href="~/css/style4.css">
 
</head>
<div class="container mt-5">
    <script>
        $(document).ready(function () {
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                        toastr.success('@TempData["SuccessMessage"]', 'Başarılı');
            </text>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                        toastr.error('@TempData["ErrorMessage"]', 'Hata');
            </text>
        }
                    });
    </script>
    <h1 class="mb-4">Etkinlik Ekle</h1>

    <form asp-action="AddEvent" method="post" enctype="multipart/form-data">
        <div class="mb-3">
            <label for="Name" class="form-label">Etkinlik Adı</label>
            <input type="text" class="form-control" id="Name" name="Name" required>
        </div>

        <div class="mb-3">
            <label for="Description" class="form-label">Açıklama</label>
            <textarea class="form-control" id="Description" name="Description"></textarea>
        </div>
        <div class="mb-3">
            <label for="Image" class="form-label">Resim Ekle</label>
            <input type="file" class="form-control" id="Image" name="Image" accept="image/*" required>
        </div>

        <div class="mb-3">
            <label for="Category" class="form-label">Kategori</label>
            <select class="form-select" id="Category" name="selectedCategoryId" required>
                <option value="" disabled selected>Kategori seçin</option>
                @foreach (var category in ViewBag.Categories as List<WebApplication1.Models.Kategori>)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </select>
        </div>

        <div class="mb-3">
            <label for="Date" class="form-label">Tarih</label>
            <input type="datetime-local" class="form-control" id="Date" name="Date" required>
        </div>

        <div class="mb-3">
            <label for="DurationHours" class="form-label">Süre (Saat)</label>
            <input type="number" class="form-control" id="DurationHours" name="DurationHours" min="0" required>
        </div>

        <div class="mb-3">
            <label for="DurationMinutes" class="form-label">Süre (Dakika)</label>
            <input type="number" class="form-control" id="DurationMinutes" name="DurationMinutes" min="0" max="59" required>
        </div>

        <div class="mb-3">
            <label for="map" class="form-label">Konum Seç</label>
            <div id="map" style="height: 400px; width: 100%;"></div>
            <input type="hidden" id="Location" name="Location" required>
            <input type="text" id="Address" name="Address" class="form-control mt-2" placeholder="Seçilen adres burada görünecek" readonly>
        </div>
        <button type="submit" class="btn btn-primary">Etkinlik Ekle</button>
    </form>
</div>

<!-- Google Maps API -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBRXYjVWKwDEIRF1bA9JeCLsI78Nc9ycrk&callback=initMap" async defer></script>

<script>
    let map, marker, geocoder;

    function initMap() {
        geocoder = new google.maps.Geocoder();

        map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: 39.92077, lng: 32.85411 }, // Ankara, Türkiye koordinatları
            zoom: 6,
        });

        map.addListener("click", (event) => {
            const latLng = event.latLng;

            // Marker oluştur veya taşı
            if (!marker) {
                marker = new google.maps.Marker({
                    position: latLng,
                    map: map,
                });
            } else {
                marker.setPosition(latLng);
            }

            // Latitude ve Longitude'u gizli inputa yaz
            document.getElementById("Location").value = `${latLng.lat()},${latLng.lng()}`;

            // Geocoding servisiyle adresi al
            geocoder.geocode({ location: latLng }, (results, status) => {
                if (status === "OK" && results[0]) {
                    document.getElementById("Address").value = results[0].formatted_address;
                } else {
                    document.getElementById("Address").value = "Adres alınamadı.";
                }
            });
        });
    }
</script>